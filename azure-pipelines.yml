trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    include:
    - Src/*

pool:
  name: Hosted Windows 2019 with VS2019
  demands: msbuild

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Debug'

name: 4.19.$(Year:yy)$(DayOfYear)$(Rev:.rr)

steps:
- task: DeleteFiles@1
  displayName: 'Delete files from Build'
  inputs:
    SourceFolder: Build
    Contents: '**/*.csproj'

- task: DeleteFiles@1
  displayName: 'Delete files from Docs'
  inputs:
    SourceFolder: Docs
    Contents: '**/*.csproj'

- task: DeleteFiles@1
  displayName: 'Delete files from Quick-Starts'
  inputs:
    SourceFolder: 'Quick-Starts'
    Contents: '**/*.csproj'

- task: DeleteFiles@1
  displayName: 'Delete files from Src'
  inputs:
    SourceFolder: Src
    Contents: |
     **/GoodToCode.Entity.Universal.csproj
     **/Genesys.Entity.Windows.csproj

- task: PowerShell@2
  displayName: 'PowerShell Script Set-Version.ps1'
  inputs:
    targetType: filePath
    filePath: './Build/Build.Scripts.Modules/CI/Set-Version.ps1'
    arguments: '-Path $(Build.SourcesDirectory)'

- task: MSBuild@1
  displayName: 'Build solution **/*.sqlproj'
  inputs:
    solution: '**/*.sqlproj'
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'
    msbuildArguments: '/p:OutDir=\lib\goodtocode-entities\contentFiles\any\any /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true'
    clean: true

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: restore
    projects: '**/*.csproj'
    feedsToUse: config
    nugetConfigPath: Build/.nuget/NuGet.config

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    projects: '**/*.csproj'
    arguments: '--output \lib\goodtocode-entities --configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    projects: '**/*.csproj'
  continueOnError: true

- task: NuGetCommand@2
  displayName: 'NuGet pack Entity.Abstractions.nuspec'
  inputs:
    command: pack
    packagesToPack: Build/Build.Content/NuGet/Entity.Abstractions.nuspec
    versioningScheme: byBuildNumber

- task: NuGetCommand@2
  displayName: 'NuGet pack Entity.Hosting.nuspec'
  inputs:
    command: pack
    packagesToPack: Build/Build.Content/NuGet/Entity.Hosting.nuspec
    versioningScheme: byBuildNumber

- task: NuGetCommand@2
  displayName: 'NuGet pack Entity.Hosting.Server.nuspec'
  inputs:
    command: pack
    packagesToPack: Build/Build.Content/NuGet/Entity.Hosting.Server.nuspec
    versioningScheme: byBuildNumber

- task: NuGetCommand@2
  displayName: 'NuGet pack Entity.DataAccess.Core.nuspec'
  inputs:
    command: pack
    packagesToPack: Build/Build.Content/NuGet/Entity.DataAccess.Core.nuspec
    versioningScheme: byBuildNumber

- task: NuGetCommand@2
  displayName: 'NuGet pack Entity.Dto.nuspec'
  inputs:
    command: pack
    packagesToPack: Build/Build.Content/NuGet/Entity.Dto.nuspec
    versioningScheme: byBuildNumber

- task: CopyFiles@2
  displayName: 'Copy Files Set-PackageQuality.ps1'
  inputs:
    SourceFolder: Build/Build.Scripts.Modules/CI
    Contents: 'Set-PackageQuality.ps1'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    OverWrite: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'

